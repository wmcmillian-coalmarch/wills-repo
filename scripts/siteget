#!/bin/bash

set -e
terminus_version;
if [ "$TERMINUS_OLD" = true ]; then
    echo 'Your Terminus is out of date! Please update!';
    exit 1;
fi

spinner()
{
    local pid=$1
    local delay=0.75
    local spinstr='|/-\'
    tput civis
    while [ "$(ps a | awk '{print $1}' | grep $pid)" ]; do
        local temp=${spinstr#?}
        printf " [%c]  " "$spinstr"
        local spinstr=$temp${spinstr%"$temp"}
        sleep $delay
        printf "\b\b\b\b\b\b"
    done
    tput cnorm
    printf "    \b\b\b\b"
}

trap 'tput cnorm' EXIT;

SITE="$1";
CLONE="tclone $SITE"

if [ -z $SITE ]; then
    echo "
        ERROR:
        The first argument must be the site name from pantheon.
        USAGE:
        siteget got-bugs
        siteget got-bugs live
        siteget got-bugs --no-refresh
        siteget got-bugs live --no-refresh
    "
    exit 1
fi

if [ "$SITE" = "--help" ] || [ "$SITE" = "-h" ]; then
    echo "
            Retrieves a site from Pantheon.
            First argument must always be the Pantheon machine name.
            The second argument (optional) can be the Pantheon environment or the --no-refresh flag.
            If no environment is given, \"dev\" will be assumed.

            The --no-refresh flag will skip the refreshing of drush aliases and the cached site list.

            USAGE:
            siteget got-bugs
            siteget got-bugs live
            siteget got-bugs --no-refresh
            siteget got-bugs live --no-refresh
    ";
    exit 0;
fi

if [ -n "$2" ]; then
    ENV="$2"
else
    ENV="dev"
fi

noRefresh="0"

if [ "$ENV" = "--no-refresh" ]; then
    noRefresh="1"
    ENV="dev"
fi

if [ -n "$3" ] && [ "$3" = "--no-refresh" ]; then
    noRefresh="1"
fi

cd ~/Sites
tlogin

if [ "$noRefresh" = "1" ]; then
    echo "skipping site alias and site list refresh"
else
    echo "refreshing site aliases..."
    terminus aliases > /dev/null 2>&1 & spinner $!
    echo "refreshing site list..."
    terminus site:list > /dev/null 2>&1 & spinner $!
fi

notfound="Not found:.*"
if [[ $((drush sa @pantheon.$SITE.$ENV) 2>&1) =~ $notfound ]]
then
    echo "Alias @pantheon.$SITE.$ENV not found!"
    echo "adding you to the site in pantheon"
    email=$(terminus auth:whoami);
    terminus site:team:add $SITE $email &&
    echo "refreshing site aliases..."
    terminus aliases > /dev/null 2>&1 & spinner $!
fi;


if [ -d ~/Sites/$SITE ]; then
    echo "Directory for $SITE already exists. Pulling"
    cd $SITE
    chmod 775 ~/Sites/$SITE/sites/default
    git pull
else
    eval $CLONE &&
    cd $SITE
    chmod 775 ~/Sites/$SITE/sites/default
fi
rewritebase $SITE
if [ -f ~/Sites/$SITE/core/lib/Drupal.php ]
then
    DRUPALV=8
else
    DRUPALV=7
fi;
terminus-ssp $SITE $ENV &&
drushfiles $SITE $ENV &&
cd ~/Sites/$SITE &&
open "http://$SITE.test/"