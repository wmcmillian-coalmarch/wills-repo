#!/bin/bash

set -e

terminus_version;

PROJECTDIR="Sites"
if [[ "${PWD}" =~ ^${HOME}/Projects ]]; then
    PROJECTDIR="Projects"
fi

if [ -z "$1" ]
then
    if [[ ! "${PWD}" =~ ^${HOME}/$PROJECTDIR ]]; then
        echo "Not in a Project directory like ~/Sites or ~/Projects"
        exit 1;
    fi

    SITE=${PWD##*/$PROJECTDIR/}
    SITE=${SITE%%/*}
else
    SITE=$1
fi;

if [ -z "$2" ]
then
        ENV="dev"
else
        ENV=$2
fi;

if [ "$SITE" = "live" ] || [ "$SITE" = "dev" ] || [ "$SITE" = "test" ]
then
    ENV=$SITE
    ROOT=$(drush ev "print DRUPAL_ROOT");
    SITE=${ROOT##*/}
fi;

cd ~/Sites/$SITE

if [ -f ~/Sites/$SITE/core/lib/Drupal.php ]
then
    DRUPALV=8
else
    DRUPALV=7
fi;

cd ~/Sites/$SITE/sites/default;

notfound="Not found:.*"
if [[ $((drush sa @pantheon.$SITE.$ENV) 2>&1) =~ $notfound ]]
then
    echo "Alias @pantheon.$SITE.$ENV not found!"
    echo "refreshing aliases.."
    if [ "$TERMINUS_OLD" = true ]; then
        terminus sites aliases
    else
        terminus aliases
    fi
fi;

if [ $DRUPALV = "8" ]
then
    local_settings=~/Sites/${SITE}/sites/default/settings.local.php;
    if [ ! -f $local_settings ]; then
        chmod 775 ~/Sites/$SITE/sites/default
        createLocalDrupalSettings.sh $SITE;
    fi
    chmod 775 ~/Sites/$SITE/sites/default
else
    if [ ! -f sites/default/settings.php ]
    then
        DB=${SITE//-/_}
        echo "No settings.php. creating..."
        drush si --db-url=mysql://root:root@localhost/$DB -y > /dev/null 2>&1 & spinner $! || true
    fi;
fi;

if [ $DRUPALV = "7" ]; then
    drush @pantheon.$SITE.$ENV cc all --strict=0;
else
    drush @pantheon.$SITE.$ENV cr
fi

tlogin

mkdir -p $HOME/sqltemp
rm ~/sqltemp/$SITE*.sql.gz > /dev/null 2>&1 ||

if [ "$TERMINUS_OLD" = true ]; then
    terminus site backups create --element=database --site=$SITE --env=$ENV &&
    terminus site backups get --element=database --site=$SITE --env=$ENV --to=$HOME/sqltemp --latest
else

    spinner()
    {
        local pid=$1
        local delay=0.5
        local spinstr='|/-\'
        while [ "$(ps a | awk '{print $1}' | grep $pid)" ]; do
            local temp=${spinstr#?}
            printf " [%c]  " "$spinstr"
            local spinstr=$temp${spinstr%"$temp"}
            sleep $delay
            printf "\b\b\b\b\b\b"
        done
        printf "    \b\b\b\b"
    }

    SITEENV="$SITE.$ENV";
    printf "Backing up database..." &&
    terminus backup:create "$SITEENV" --element=database 2>&1 & spinner $!
    printf "Downloading..." &&
    terminus backup:get "$SITEENV" --element=database --to=$HOME/sqltemp/${SITE}_bak.sql.gz 2>&1 & spinner $!
    printf "Database backup downloaded to $HOME/sqltemp/${SITE}_bak.sql.gz\n"
fi

drush sql-create -y;

pv ~/sqltemp/$SITE*.sql.gz | gunzip | $(drush sql-connect);
rm ~/sqltemp/$SITE*.sql.gz
if [ $DRUPALV = "7" ]; then
    drush vset cache 0;drush vset preprocess_css 0;drush vset preprocess_js 0;
fi
if [ $DRUPALV = "7" ]; then
    drush cc all
else
    drush cr
fi
cd -;
osascript -e "display notification \"SQL synced for $SITE\" with title \"SQL synced!\"";
#say "sequel synced";
